(()=>{var e,r,t,n,o={8410:(e,r,t)=>{Promise.all([t.e(79),t.e(950),t.e(181),t.e(0),t.e(799),t.e(464)]).then(t.bind(t,9464))},9310:(e,r,t)=>{"use strict";var n=new Error;e.exports=new Promise(((e,r)=>{if("undefined"!=typeof layout)return e();t.l("https://cfx-nui-npwd/resources/html/remoteEntry.js",(t=>{if("undefined"!=typeof layout)return e();var o=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;n.message="Loading script failed.\n("+o+": "+a+")",n.name="ScriptExternalLoadError",n.type=o,n.request=a,r(n)}),"layout")})).then((()=>layout))}},a={};function i(e){var r=a[e];if(void 0!==r)return r.exports;var t=a[e]={exports:{}};return o[e].call(t.exports,t,t.exports,i),t.exports}i.m=o,i.c=a,i.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return i.d(r,{a:r}),r},i.d=(e,r)=>{for(var t in r)i.o(r,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((r,t)=>(i.f[t](e,r),r)),[])),i.u=e=>e+".js",i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),e={},r="npwd_crypto:",i.l=(t,n,o,a)=>{if(e[t])e[t].push(n);else{var u,l;if(void 0!==o)for(var s=document.getElementsByTagName("script"),f=0;f<s.length;f++){var c=s[f];if(c.getAttribute("src")==t||c.getAttribute("data-webpack")==r+o){u=c;break}}u||(l=!0,(u=document.createElement("script")).charset="utf-8",u.timeout=120,i.nc&&u.setAttribute("nonce",i.nc),u.setAttribute("data-webpack",r+o),u.src=t),e[t]=[n];var p=(r,n)=>{u.onerror=u.onload=null,clearTimeout(h);var o=e[t];if(delete e[t],u.parentNode&&u.parentNode.removeChild(u),o&&o.forEach((e=>e(n))),r)return r(n)},h=setTimeout(p.bind(null,void 0,{type:"timeout",target:u}),12e4);u.onerror=p.bind(null,u.onerror),u.onload=p.bind(null,u.onload),l&&document.head.appendChild(u)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t={799:[1268]},n={1268:["default","./ui",9310]},i.f.remotes=(e,r)=>{i.o(t,e)&&t[e].forEach((e=>{var t=i.R;t||(t=[]);var a=n[e];if(!(t.indexOf(a)>=0)){if(t.push(a),a.p)return r.push(a.p);var u=r=>{r||(r=new Error("Container missing")),"string"==typeof r.message&&(r.message+='\nwhile loading "'+a[1]+'" from '+a[2]),o[e]=()=>{throw r},a.p=0},l=(e,t,n,o,i,l)=>{try{var s=e(t,n);if(!s||!s.then)return i(s,o,l);var f=s.then((e=>i(e,o)),u);if(!l)return f;r.push(a.p=f)}catch(e){u(e)}},s=(e,r,n)=>l(r.get,a[1],t,0,f,n),f=r=>{a.p=1,o[e]=e=>{e.exports=r()}};l(i,a[2],0,0,((e,r,t)=>e?l(i.I,a[0],0,e,s,t):u()),1)}}))},(()=>{i.S={};var e={},r={};i.I=(t,n)=>{n||(n=[]);var o=r[t];if(o||(o=r[t]={}),!(n.indexOf(o)>=0)){if(n.push(o),e[t])return e[t];i.o(i.S,t)||(i.S[t]={});var a=i.S[t],u="npwd_crypto",l=(e,r,t,n)=>{var o=a[e]=a[e]||{},i=o[r];(!i||!i.loaded&&(!n!=!i.eager?n:u>i.from))&&(o[r]={get:t,from:u,eager:!!n})},s=[];return"default"===t&&(l("chart.js","3.9.1",(()=>i.e(512).then((()=>()=>i(5512))))),l("i18next","21.8.16",(()=>Promise.all([i.e(706),i.e(803)]).then((()=>()=>i(1706))))),l("react-chartjs-2","4.3.1",(()=>Promise.all([i.e(950),i.e(0),i.e(376)]).then((()=>()=>i(5376))))),l("react-dom","17.0.2",(()=>Promise.all([i.e(935),i.e(950)]).then((()=>()=>i(3935))))),l("react-fivem-hooks","1.0.2-1",(()=>Promise.all([i.e(950),i.e(208)]).then((()=>()=>i(4208))))),l("react-router-dom","5.3.0",(()=>Promise.all([i.e(48),i.e(950),i.e(576)]).then((()=>()=>i(6048))))),l("react","17.0.2",(()=>i.e(294).then((()=>()=>i(7294))))),l("recoil","0.6.1",(()=>Promise.all([i.e(804),i.e(950),i.e(181)]).then((()=>()=>i(2804))))),l("styled-components","5.3.3",(()=>Promise.all([i.e(950),i.e(524)]).then((()=>()=>i(5458))))),(e=>{var r=e=>{return r="Initialization of sharing external failed: "+e,"undefined"!=typeof console&&console.warn&&console.warn(r);var r};try{var o=i(9310);if(!o)return;var a=e=>e&&e.init&&e.init(i.S[t],n);if(o.then)return s.push(o.then(a,r));var u=a(o);u&&u.then&&s.push(u.catch(r))}catch(e){r(e)}})()),s.length?e[t]=Promise.all(s).then((()=>e[t]=1)):e[t]=1}}})(),(()=>{var e;i.g.importScripts&&(e=i.g.location+"");var r=i.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=e})(),(()=>{var e=e=>{var r=e=>e.split(".").map((e=>+e==e?+e:e)),t=/^([^-+]+)?(?:-([^+]+))?(?:\+(.+))?$/.exec(e),n=t[1]?r(t[1]):[];return t[2]&&(n.length++,n.push.apply(n,r(t[2]))),t[3]&&(n.push([]),n.push.apply(n,r(t[3]))),n},r=(r,t)=>{r=e(r),t=e(t);for(var n=0;;){if(n>=r.length)return n<t.length&&"u"!=(typeof t[n])[0];var o=r[n],a=(typeof o)[0];if(n>=t.length)return"u"==a;var i=t[n],u=(typeof i)[0];if(a!=u)return"o"==a&&"n"==u||"s"==u||"u"==a;if("o"!=a&&"u"!=a&&o!=i)return o<i;n++}},t=e=>{var r=e[0],n="";if(1===e.length)return"*";if(r+.5){n+=0==r?">=":-1==r?"<":1==r?"^":2==r?"~":r>0?"=":"!=";for(var o=1,a=1;a<e.length;a++)o--,n+="u"==(typeof(u=e[a]))[0]?"-":(o>0?".":"")+(o=2,u);return n}var i=[];for(a=1;a<e.length;a++){var u=e[a];i.push(0===u?"not("+l()+")":1===u?"("+l()+" || "+l()+")":2===u?i.pop()+" "+i.pop():t(u))}return l();function l(){return i.pop().replace(/^\((.+)\)$/,"$1")}},n=(r,t)=>{if(0 in r){t=e(t);var o=r[0],a=o<0;a&&(o=-o-1);for(var i=0,u=1,l=!0;;u++,i++){var s,f,c=u<r.length?(typeof r[u])[0]:"";if(i>=t.length||"o"==(f=(typeof(s=t[i]))[0]))return!l||("u"==c?u>o&&!a:""==c!=a);if("u"==f){if(!l||"u"!=c)return!1}else if(l)if(c==f)if(u<=o){if(s!=r[u])return!1}else{if(a?s>r[u]:s<r[u])return!1;s!=r[u]&&(l=!1)}else if("s"!=c&&"n"!=c){if(a||u<=o)return!1;l=!1,u--}else{if(u<=o||f<c!=a)return!1;l=!1}else"s"!=c&&"n"!=c&&(l=!1,u--)}}var p=[],h=p.pop.bind(p);for(i=1;i<r.length;i++){var d=r[i];p.push(1==d?h()|h():2==d?h()&h():d?n(d,t):!h())}return!!h()},o=(e,o,i,u)=>{var l=((e,t)=>{var n=e[t];return Object.keys(n).reduce(((e,t)=>!e||!n[e].loaded&&r(e,t)?t:e),0)})(e,i);return n(u,l)||"undefined"!=typeof console&&console.warn&&console.warn(((e,r,n,o)=>"Unsatisfied version "+n+" from "+(n&&e[r][n].from)+" of shared singleton module "+r+" (required "+t(o)+")")(e,i,l,u)),a(e[i][l])},a=e=>(e.loaded=1,e.get()),u=e=>function(r,t,n,o){var a=i.I(r);return a&&a.then?a.then(e.bind(e,r,i.S[r],t,n,o)):e(r,i.S[r],t,n,o)},l=u(((e,r,t,n,a)=>r&&i.o(r,t)?o(r,0,t,n):a())),s=u(((e,t,o,u,l)=>{var s=t&&i.o(t,o)&&((e,t,o)=>{var a=e[t];return(t=Object.keys(a).reduce(((e,t)=>!n(o,t)||e&&!r(e,t)?e:t),0))&&a[t]})(t,o,u);return s?a(s):l()})),f={},c={2950:()=>l("default","react",[1,17,0,2],(()=>i.e(294).then((()=>()=>i(7294))))),2181:()=>l("default","react-dom",[1,17,0,2],(()=>i.e(935).then((()=>()=>i(3935))))),7e3:()=>s("default","chart.js",[1,3,9,1],(()=>i.e(512).then((()=>()=>i(5512))))),2453:()=>s("default","recoil",[2,0,6,1],(()=>i.e(804).then((()=>()=>i(2804))))),3839:()=>s("default","styled-components",[1,5,3,3],(()=>i.e(458).then((()=>()=>i(5458))))),5475:()=>s("default","react-fivem-hooks",[1,1,0,2,,1],(()=>i.e(387).then((()=>()=>i(4208))))),5662:()=>s("default","react-router-dom",[4,5,3,0],(()=>i.e(48).then((()=>()=>i(6048))))),7675:()=>s("default","react-chartjs-2",[1,4,3,1],(()=>i.e(563).then((()=>()=>i(5376))))),5142:()=>s("default","i18next",[1,21,8,16],(()=>i.e(706).then((()=>()=>i(1706)))))},p={0:[7e3],181:[2181],464:[5142],799:[2453,3839,5475,5662,7675],950:[2950]};i.f.consumes=(e,r)=>{i.o(p,e)&&p[e].forEach((e=>{if(i.o(f,e))return r.push(f[e]);var t=r=>{f[e]=0,i.m[e]=t=>{delete i.c[e],t.exports=r()}},n=r=>{delete f[e],i.m[e]=t=>{throw delete i.c[e],r}};try{var o=c[e]();o.then?r.push(f[e]=o.then(t).catch(n)):t(o)}catch(e){n(e)}}))}})(),(()=>{var e={179:0};i.f.j=(r,t)=>{var n=i.o(e,r)?e[r]:void 0;if(0!==n)if(n)t.push(n[2]);else if(/^(0|181|950)$/.test(r))e[r]=0;else{var o=new Promise(((t,o)=>n=e[r]=[t,o]));t.push(n[2]=o);var a=i.p+i.u(r),u=new Error;i.l(a,(t=>{if(i.o(e,r)&&(0!==(n=e[r])&&(e[r]=void 0),n)){var o=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;u.message="Loading chunk "+r+" failed.\n("+o+": "+a+")",u.name="ChunkLoadError",u.type=o,u.request=a,n[1](u)}}),"chunk-"+r,r)}};var r=(r,t)=>{var n,o,[a,u,l]=t,s=0;if(a.some((r=>0!==e[r]))){for(n in u)i.o(u,n)&&(i.m[n]=u[n]);l&&l(i)}for(r&&r(t);s<a.length;s++)o=a[s],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0},t=self.webpackChunknpwd_crypto=self.webpackChunknpwd_crypto||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})(),i(8410)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,