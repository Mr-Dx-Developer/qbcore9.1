"use strict";(self.webpackChunknpwd_crypto=self.webpackChunknpwd_crypto||[]).push([[799],{7951:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(6038),a=n(5974),l=n(2950),o=n.n(l),c=n(5137),i=n(6115),u=c.Z[500],s=(i.Z.white,i.Z.white),d=(i.Z.black,{light:{palette:{mode:"light",primary:{main:u,dark:c.Z[700],light:c.Z[300],contrastText:s},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:s}}},dark:{palette:{mode:"dark",primary:{main:u,dark:c.Z[700],light:c.Z[300],contrastText:s},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:s}}}});const m=function(e){var t=e.children,n=e.mode,l=d[n],c=(0,r.Z)(l);return o().createElement(a.Z,{theme:c},t)}},5210:(e,t,n)=>{n.d(t,{S:()=>a});var r=n(2453),a={currentValue:(0,r.atom)({key:"currentValue",default:1}),balance:(0,r.atom)({key:"balance",default:0}),history:(0,r.atom)({key:"history",default:[38,42,56,56,69,32,48,50,57,57]}),transactions:(0,r.atom)({key:"transactions",default:[]})}},2858:(e,t,n)=>{n.d(t,{w:()=>u});var r=n(2950),a=n.n(r),l=n(799),o=n(417),c=n(7109),i=n(8584),u=function(e){var t=e.heading,n=e.text,r=e.icon;return a().createElement(l.ZP,null,a().createElement(o.Z,null,a().createElement(c.Z,null,r)),a().createElement(i.Z,{primary:t,secondary:n}))}},1551:(e,t,n)=>{n.d(t,{Z:()=>s});var r,a,l=n(2950),o=n.n(l),c=n(2734),i=n(245),u=n(6790).Z.div(d||(r=["\n  display: flex;\n  align-items: center;\n\n  min-height: ",";\n  padding-left: 1.5rem;\n  background-color: ",";\n"],a=["\n  display: flex;\n  align-items: center;\n\n  min-height: ",";\n  padding-left: 1.5rem;\n  background-color: ",";\n"],Object.defineProperty?Object.defineProperty(r,"raw",{value:a}):r.raw=a,d=r),"4rem",(function(e){return e.backgroundColor}));const s=function(e){var t=e.children,n=(0,c.Z)();return o().createElement(u,{backgroundColor:n.palette.primary.main},o().createElement(i.Z,{variant:"h5",color:"primary.contrastText"},t))};var d},3971:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(2950),a=n.n(r),l=n(4172),o=n(2004),c=n(5662),i=n(3334),u=n(1233),s=n(5542);const d=function(){var e=(0,c.useLocation)().pathname,t=(0,r.useState)(e),n=t[0],d=t[1];return a().createElement(l.Z,{value:n,onChange:function(e,t){d(t)},showLabels:!0,sx:{width:"100%"}},a().createElement(o.Z,{label:"Portfolio",value:"/crypto",component:c.NavLink,icon:a().createElement(i.Z,null),to:"/crypto"}),a().createElement(o.Z,{label:"Market History",value:"/crypto/history",color:"secondary",component:c.NavLink,icon:a().createElement(u.Z,null),to:"/crypto/history"}),a().createElement(o.Z,{label:"Transactions",value:"/crypto/transactions",color:"secondary",component:c.NavLink,icon:a().createElement(s.Z,null),to:"/crypto/transactions"}))}},3377:(e,t,n)=>{n.d(t,{v:()=>d});var r=n(2950),a=n.n(r),l=n(5282),o=n(6831),c=n(442),i=n(245),u=function(){return u=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},u.apply(this,arguments)};const s=(0,r.forwardRef)((function(e,t){return a().createElement(c.Z,u({sx:{zIndex:1e4},elevation:4,variant:"filled"},e,{ref:t}),a().createElement(i.Z,{sx:{maxWidth:"300px",wordWrap:"break-word",fontSize:"1.1em"}},e.children))}));var d=function(){var e,t=(0,o.D)(),n=t.alert,r=t.isOpen,c=t.handleClose;return a().createElement(l.Z,{autoHideDuration:null!==(e=null==n?void 0:n.duration)&&void 0!==e?e:3e3,open:r,sx:{display:"flex",justifyContent:"center",alignItems:"center",height:"auto",position:"absolute",bottom:75,left:"0 !important",right:"0 !important"},onClose:c},a().createElement(s,{severity:(null==n?void 0:n.type)||"info",onClose:c},(null==n?void 0:n.message)||""))}},7030:(e,t,n)=>{n.d(t,{S:()=>l,Z:()=>o});var r=n(2950),a=n.n(r),l=(0,r.createContext)(null);const o=function(e){var t=e.children,n=(0,r.useState)(!1),o=n[0],c=n[1],i=(0,r.useState)(null),u=i[0],s=i[1];return a().createElement(l.Provider,{value:{alert:u,addAlert:function(e){s(e),c(!0)},handleClose:function(){c(!1)},isOpen:o}},t)}},6831:(e,t,n)=>{n.d(t,{D:()=>l});var r=n(2950),a=n(7030),l=function(){return(0,r.useContext)(a.S)}},9085:(e,t,n)=>{n.d(t,{Z:()=>r});const r=function(e,t,n){return r=this,a=void 0,o=function(){var n;return function(e,t){var n,r,a,l,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return l={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(l[Symbol.iterator]=function(){return this}),l;function c(l){return function(c){return function(l){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&l[0]?r.return:l[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,l[1])).done)return a;switch(r=0,a&&(l=[2&l[0],a.value]),l[0]){case 0:case 1:a=l;break;case 4:return o.label++,{value:l[1],done:!1};case 5:o.label++,r=l[1],l=[0];continue;case 7:l=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==l[0]&&2!==l[0])){o=0;continue}if(3===l[0]&&(!a||l[1]>a[0]&&l[1]<a[3])){o.label=l[1];break}if(6===l[0]&&o.label<a[1]){o.label=a[1],a=l;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(l);break}a[2]&&o.ops.pop(),o.trys.pop();continue}l=t.call(e,o)}catch(e){l=[6,e],r=0}finally{n=a=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([l,c])}}}(this,(function(r){switch(r.label){case 0:return n={method:"post",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(t)},[4,fetch("https://".concat("npwd_crypto","/").concat(e),n)];case 1:return[4,r.sent().json()];case 2:return[2,r.sent()]}}))},new((l=void 0)||(l=Promise))((function(e,t){function n(e){try{i(o.next(e))}catch(e){t(e)}}function c(e){try{i(o.throw(e))}catch(e){t(e)}}function i(t){var r;t.done?e(t.value):(r=t.value,r instanceof l?r:new l((function(e){e(r)}))).then(n,c)}i((o=o.apply(r,a||[])).next())}));var r,a,l,o}},2072:(e,t,n)=>{n.d(t,{A:()=>b});var r=n(2950),a=n.n(r),l=n(7e3),o=n(7675),c=n(5137),i=n(3486),u=n(265),s=n(3839),d=n.n(s),m=n(2734),f=n(6501),p=n(245),h=n(2453),y=n(5210);l.Chart.register(l.CategoryScale,l.LinearScale,l.PointElement,l.LineElement,l.Title,l.Tooltip,l.Legend);var v,g,E,Z=d().div(v||(g=["\n  display: grid;\n  grid-template-rows: 3fr 1fr;\n  height: calc(100% - 3.5rem);\n  place-items: center;\n"],E=["\n  display: grid;\n  grid-template-rows: 3fr 1fr;\n  height: calc(100% - 3.5rem);\n  place-items: center;\n"],Object.defineProperty?Object.defineProperty(g,"raw",{value:E}):g.raw=E,v=g)),b=function(){var e,t,n=(0,h.useRecoilValue)(y.S.history),r=n.length,l=new Array(r).fill(""),s="dark"===(0,m.Z)().palette.mode,d={labels:l,datasets:[{data:n,borderColor:c.Z[500],backgroundColor:c.Z[700],tension:.2}]},v=(e=n[0],(t=n[r-1])>e?[1,((t-e)/e*100).toFixed(2)]:[0,((t-e)/t*-1*100).toFixed(2)]),g=v[0],E=v[1];return a().createElement(Z,null,a().createElement(o.Line,{options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},tooltip:{callbacks:{label:function(e){return"$"+e.raw}}}},scales:{y:{min:0,ticks:{callback:function(e){return"$"+e}},grid:{display:!1,borderColor:s?"#f5f5f5":"#3F3F3FA6"}},x:{grid:{display:!1,borderColor:s?"#f5f5f5":"#3F3F3FA6"}}}},data:d}),a().createElement(f.Z,{sx:{height:50,width:"90%",display:"flex",justifyContent:"center",alignItems:"center"},elevation:3,variant:"outlined"},a().createElement(p.Z,{sx:{color:1===g?i.Z[500]:u.Z[500],fontWeight:"bold"}},1===g?"Up "+E+"%":"Down "+E+"%")))}},8087:(e,t,n)=>{n.d(t,{_:()=>D});var r,a,l=n(2950),o=n.n(l),c=n(6501),i=n(6123),u=n(7709),s=n(6914),d=n(3839),m=n.n(d),f=n(6857),p=n(62),h=n(5414),y=n(2440),v=n(3334),g=n(9547),E=n(2858),Z=function(e){var t=e.value,n=e.balance;return o().createElement(y.Z,{sx:{width:"100%"}},o().createElement(E.w,{heading:"Balance",text:n.toString(),icon:o().createElement(v.Z,{fontSize:"medium",color:"primary"})}),o().createElement(E.w,{heading:"Cash Value",text:"$".concat((n*t).toFixed(2)),icon:o().createElement(f.Z,{fontSize:"medium",color:"primary"})}),o().createElement(E.w,{heading:"Crypto Worth",text:"$".concat(t),icon:o().createElement(g.Z,{fontSize:"medium",color:"primary"})}))},b=n(7645),w=n(7750),x=n(245),S=n(573),C=n(3447),k=n(3709),F=n(2453),T=n(5210),P=n(9085),O=n(6831),R=n(1268),j=function(e){var t=e.close,n=(0,l.useState)(""),r=n[0],a=n[1],c=(0,l.useState)(!1),i=c[0],u=c[1],d=(0,F.useRecoilValue)(T.S.currentValue),m=(0,F.useSetRecoilState)(T.S.balance),f=(0,O.D)().addAlert;return o().createElement(o().Fragment,null,o().createElement(b.Z,null," Confirm Purchase "),o().createElement(w.Z,null,r&&o().createElement(x.Z,null,"You will receive ",(parseFloat(r)/d).toFixed(2)," bits"),o().createElement(R.TextField,{value:r,onChange:function(e){a(e.target.value)},placeholder:"Amount",type:"number",error:i,InputProps:{startAdornment:o().createElement(S.Z,{position:"start",variant:"standard"},"$")}})),o().createElement(C.Z,null,o().createElement(s.Z,{variant:"text",color:"error",onClick:t},"Cancel"),o().createElement(s.Z,{variant:"text",color:"success",onClick:function(){var e=parseFloat(r);(0,P.Z)("npwd_crypto:tryBuyCrypto",{amount:e}).then((function(e){if("error"===e.status)return u(!0),f({message:e.data.reason,type:"error"});u(!1),m(e.data.newBal)}))}},"Confirm")))},A=function(e){var t=e.close,n=(0,l.useState)(""),r=n[0],a=n[1],c=(0,l.useState)(!1),i=c[0],u=c[1],d=(0,F.useRecoilValue)(T.S.currentValue),m=(0,F.useSetRecoilState)(T.S.balance),f=(0,O.D)().addAlert;return o().createElement(o().Fragment,null,o().createElement(b.Z,null," Confirm Sell "),o().createElement(w.Z,null,r&&o().createElement(x.Z,null,"You will receive $",parseFloat(r)*d),o().createElement(R.TextField,{value:r,onChange:function(e){a(e.target.value)},placeholder:"Amount",type:"number",error:i})),o().createElement(C.Z,null,o().createElement(s.Z,{variant:"text",color:"error",onClick:t},"Cancel"),o().createElement(s.Z,{variant:"text",color:"success",onClick:function(){var e=parseFloat(r);(0,P.Z)("npwd_crypto:trySellCrypto",{amount:e}).then((function(e){if("error"===e.status)return u(!0),f({message:e.data.reason,type:"error"});u(!1),m(e.data.newBal)}))}},"Confirm")))},V=function(e){var t=e.close,n=(0,l.useState)(""),r=n[0],a=n[1],c=(0,l.useState)(""),i=c[0],u=c[1],d=(0,l.useState)(!1),m=d[0],f=d[1],p=(0,F.useRecoilValue)(T.S.currentValue),h=(0,F.useSetRecoilState)(T.S.balance),y=(0,O.D)().addAlert;return o().createElement(o().Fragment,null,o().createElement(b.Z,null," Confirm Trade "),o().createElement(w.Z,null,r&&o().createElement(x.Z,null,"You will receive $",parseFloat(r)*p),o().createElement(k.Z,null,o().createElement(R.TextField,{value:r,onChange:function(e){a(e.target.value)},placeholder:"Amount",type:"number",error:m}),o().createElement(R.TextField,{value:i,onChange:function(e){u(e.target.value)},placeholder:"Player ID",type:"number",error:m}))),o().createElement(C.Z,null,o().createElement(s.Z,{variant:"text",color:"error",onClick:t},"Cancel"),o().createElement(s.Z,{variant:"text",color:"success",onClick:function(){var e=parseFloat(r),t=parseInt(i);(0,P.Z)("npwd_crypto:tryTradeCrypto",{amount:e,target:t}).then((function(e){if("error"===e.status)return f(!0),y({message:e.data.reason,type:"error"});f(!1),h(e.data.newBal)}))}},"Confirm")))},B=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},I=m().div(r||(r=B(["\n  display: grid;\n  grid-template-rows: 1fr 2fr;\n  height: 90%;\n  gap: 1.5rem;\n  place-items: center;\n"],["\n  display: grid;\n  grid-template-rows: 1fr 2fr;\n  height: 90%;\n  gap: 1.5rem;\n  place-items: center;\n"]))),D=function(){var e=(0,F.useRecoilValue)(T.S.balance),t=(0,F.useRecoilValue)(T.S.currentValue),n=(0,l.useState)(!1),r=n[0],a=n[1],u=(0,l.useState)(!1),s=u[0],d=u[1],m=(0,l.useState)(!1),f=m[0],p=m[1];return o().createElement(I,null,o().createElement(c.Z,{elevation:4,variant:"outlined",sx:{height:"100%",width:300,display:"flex",justifyContent:"center",alignItems:"center"}},o().createElement(Z,{value:t,balance:e})),o().createElement(_,{setBuyOpen:a,setSellOpen:d,setTradeOpen:p}),o().createElement(i.Z,{open:r,onClose:function(){return a(!1)},hideBackdrop:!0,disablePortal:!0},o().createElement(j,{close:function(){return a(!1)}})),o().createElement(i.Z,{open:s,onClose:function(){return d(!1)},hideBackdrop:!0,disablePortal:!0},o().createElement(A,{close:function(){return d(!1)}})),o().createElement(i.Z,{open:f,onClose:function(){return p(!1)},hideBackdrop:!0,disablePortal:!0},o().createElement(V,{close:function(){return p(!1)}})))},L=(0,u.ZP)(s.Z)({width:300,height:60}),$=m().div(a||(a=B(["\n  display: grid;\n  place-items: center;\n  grid-template-rows: 1fr 1fr 1fr;\n  gap: 1rem;\n"],["\n  display: grid;\n  place-items: center;\n  grid-template-rows: 1fr 1fr 1fr;\n  gap: 1rem;\n"]))),_=function(e){var t=e.setBuyOpen,n=e.setSellOpen,r=e.setTradeOpen;return o().createElement($,null,o().createElement(L,{variant:"contained",endIcon:o().createElement(p.Z,null),onClick:function(){return t(!0)}},"Buy"),o().createElement(L,{variant:"contained",endIcon:o().createElement(f.Z,null),onClick:function(){return n(!0)}},"Sell"),o().createElement(L,{variant:"contained",endIcon:o().createElement(h.Z,null),onClick:function(){return r(!0)}},"Transfer"))}},246:(e,t,n)=>{n.d(t,{P:()=>g});var r=n(2950),a=n.n(r),l=n(6857),o=n(62),c=n(5414),i=n(6501),u=n(2440),s=n(2116),d=n(2858),m=n(2453),f=n(5210),p=n(9085),h={bought:a().createElement(o.Z,{color:"error"}),sold:a().createElement(l.Z,{color:"success"}),transferred:a().createElement(c.Z,{color:"info"})},y={bought:"Purchase",sold:"Sold",transferred:"Transfer"},v=function(e,t,n,r){switch(e){case"bought":return"Bought ".concat(t," for $").concat(n);case"sold":return"Sold ".concat(t," for $").concat(n);case"transferred":return r?"Received ".concat(t," worth ").concat(n):"Sent ".concat(t," worth ").concat(n);default:return"Something's wrong here I can feel it."}},g=function(){var e=(0,m.useRecoilState)(f.S.transactions),t=e[0],n=e[1];return(0,r.useEffect)((function(){(0,p.Z)("npwd_crypto:fetchTransactions").then((function(e){n(e)}))}),[]),a().createElement(i.Z,{sx:{display:"flex",height:"100%",width:"100%",flexDirection:"column"},variant:"outlined",square:!0},a().createElement(u.Z,{dense:!0,sx:{width:"100%",overflowY:"auto",overflowX:"hidden"}},t.map((function(e,t){var n=e.type,r=e.amount,l=e.value,o=e.isReceiving;return a().createElement(a().Fragment,null,a().createElement(d.w,{heading:y[n],text:v(n,r,l,o),icon:h[n],key:t}),a().createElement(s.Z,null))}))))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,