var npwd_crypto;(()=>{"use strict";var e,r,t,n,o={3916:(e,r,t)=>{var n={"./config":()=>Promise.all([t.e(79),t.e(950),t.e(181),t.e(0),t.e(799),t.e(250)]).then((()=>()=>t(9250)))},o=(e,r)=>(t.R=r,r=t.o(n,e)?n[e]():Promise.resolve().then((()=>{throw new Error('Module "'+e+'" does not exist in container.')})),t.R=void 0,r),a=(e,r)=>{if(t.S){var n="default",o=t.S[n];if(o&&o!==e)throw new Error("Container initialization failed as it has already been initialized with a different share scope");return t.S[n]=e,t.I(n,r)}};t.d(r,{get:()=>o,init:()=>a})},9310:(e,r,t)=>{var n=new Error;e.exports=new Promise(((e,r)=>{if("undefined"!=typeof layout)return e();t.l("https://cfx-nui-npwd/resources/html/remoteEntry.js",(t=>{if("undefined"!=typeof layout)return e();var o=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;n.message="Loading script failed.\n("+o+": "+a+")",n.name="ScriptExternalLoadError",n.type=o,n.request=a,r(n)}),"layout")})).then((()=>layout))}},a={};function i(e){var r=a[e];if(void 0!==r)return r.exports;var t=a[e]={exports:{}};return o[e].call(t.exports,t,t.exports,i),t.exports}i.m=o,i.c=a,i.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return i.d(r,{a:r}),r},i.d=(e,r)=>{for(var t in r)i.o(r,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((r,t)=>(i.f[t](e,r),r)),[])),i.u=e=>e+".js",i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),e={},r="npwd_crypto:",i.l=(t,n,o,a)=>{if(e[t])e[t].push(n);else{var l,u;if(void 0!==o)for(var s=document.getElementsByTagName("script"),f=0;f<s.length;f++){var c=s[f];if(c.getAttribute("src")==t||c.getAttribute("data-webpack")==r+o){l=c;break}}l||(u=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.setAttribute("data-webpack",r+o),l.src=t),e[t]=[n];var p=(r,n)=>{l.onerror=l.onload=null,clearTimeout(d);var o=e[t];if(delete e[t],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach((e=>e(n))),r)return r(n)},d=setTimeout(p.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=p.bind(null,l.onerror),l.onload=p.bind(null,l.onload),u&&document.head.appendChild(l)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t={799:[1268]},n={1268:["default","./ui",9310]},i.f.remotes=(e,r)=>{i.o(t,e)&&t[e].forEach((e=>{var t=i.R;t||(t=[]);var a=n[e];if(!(t.indexOf(a)>=0)){if(t.push(a),a.p)return r.push(a.p);var l=r=>{r||(r=new Error("Container missing")),"string"==typeof r.message&&(r.message+='\nwhile loading "'+a[1]+'" from '+a[2]),o[e]=()=>{throw r},a.p=0},u=(e,t,n,o,i,u)=>{try{var s=e(t,n);if(!s||!s.then)return i(s,o,u);var f=s.then((e=>i(e,o)),l);if(!u)return f;r.push(a.p=f)}catch(e){l(e)}},s=(e,r,n)=>u(r.get,a[1],t,0,f,n),f=r=>{a.p=1,o[e]=e=>{e.exports=r()}};u(i,a[2],0,0,((e,r,t)=>e?u(i.I,a[0],0,e,s,t):l()),1)}}))},(()=>{i.S={};var e={},r={};i.I=(t,n)=>{n||(n=[]);var o=r[t];if(o||(o=r[t]={}),!(n.indexOf(o)>=0)){if(n.push(o),e[t])return e[t];i.o(i.S,t)||(i.S[t]={});var a=i.S[t],l="npwd_crypto",u=(e,r,t,n)=>{var o=a[e]=a[e]||{},i=o[r];(!i||!i.loaded&&(!n!=!i.eager?n:l>i.from))&&(o[r]={get:t,from:l,eager:!!n})},s=[];return"default"===t&&(u("chart.js","3.9.1",(()=>i.e(512).then((()=>()=>i(5512))))),u("i18next","21.8.16",(()=>Promise.all([i.e(706),i.e(803)]).then((()=>()=>i(1706))))),u("react-chartjs-2","4.3.1",(()=>Promise.all([i.e(950),i.e(0),i.e(376)]).then((()=>()=>i(5376))))),u("react-dom","17.0.2",(()=>Promise.all([i.e(935),i.e(950)]).then((()=>()=>i(3935))))),u("react-fivem-hooks","1.0.2-1",(()=>Promise.all([i.e(950),i.e(208)]).then((()=>()=>i(4208))))),u("react-router-dom","5.3.0",(()=>Promise.all([i.e(48),i.e(950),i.e(576)]).then((()=>()=>i(6048))))),u("react","17.0.2",(()=>i.e(294).then((()=>()=>i(7294))))),u("recoil","0.6.1",(()=>Promise.all([i.e(804),i.e(950),i.e(181)]).then((()=>()=>i(2804))))),u("styled-components","5.3.3",(()=>Promise.all([i.e(950),i.e(524)]).then((()=>()=>i(5458))))),(e=>{var r=e=>{return r="Initialization of sharing external failed: "+e,"undefined"!=typeof console&&console.warn&&console.warn(r);var r};try{var o=i(9310);if(!o)return;var a=e=>e&&e.init&&e.init(i.S[t],n);if(o.then)return s.push(o.then(a,r));var l=a(o);l&&l.then&&s.push(l.catch(r))}catch(e){r(e)}})()),s.length?e[t]=Promise.all(s).then((()=>e[t]=1)):e[t]=1}}})(),(()=>{var e;i.g.importScripts&&(e=i.g.location+"");var r=i.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=e})(),(()=>{var e=e=>{var r=e=>e.split(".").map((e=>+e==e?+e:e)),t=/^([^-+]+)?(?:-([^+]+))?(?:\+(.+))?$/.exec(e),n=t[1]?r(t[1]):[];return t[2]&&(n.length++,n.push.apply(n,r(t[2]))),t[3]&&(n.push([]),n.push.apply(n,r(t[3]))),n},r=(r,t)=>{r=e(r),t=e(t);for(var n=0;;){if(n>=r.length)return n<t.length&&"u"!=(typeof t[n])[0];var o=r[n],a=(typeof o)[0];if(n>=t.length)return"u"==a;var i=t[n],l=(typeof i)[0];if(a!=l)return"o"==a&&"n"==l||"s"==l||"u"==a;if("o"!=a&&"u"!=a&&o!=i)return o<i;n++}},t=e=>{var r=e[0],n="";if(1===e.length)return"*";if(r+.5){n+=0==r?">=":-1==r?"<":1==r?"^":2==r?"~":r>0?"=":"!=";for(var o=1,a=1;a<e.length;a++)o--,n+="u"==(typeof(l=e[a]))[0]?"-":(o>0?".":"")+(o=2,l);return n}var i=[];for(a=1;a<e.length;a++){var l=e[a];i.push(0===l?"not("+u()+")":1===l?"("+u()+" || "+u()+")":2===l?i.pop()+" "+i.pop():t(l))}return u();function u(){return i.pop().replace(/^\((.+)\)$/,"$1")}},n=(r,t)=>{if(0 in r){t=e(t);var o=r[0],a=o<0;a&&(o=-o-1);for(var i=0,l=1,u=!0;;l++,i++){var s,f,c=l<r.length?(typeof r[l])[0]:"";if(i>=t.length||"o"==(f=(typeof(s=t[i]))[0]))return!u||("u"==c?l>o&&!a:""==c!=a);if("u"==f){if(!u||"u"!=c)return!1}else if(u)if(c==f)if(l<=o){if(s!=r[l])return!1}else{if(a?s>r[l]:s<r[l])return!1;s!=r[l]&&(u=!1)}else if("s"!=c&&"n"!=c){if(a||l<=o)return!1;u=!1,l--}else{if(l<=o||f<c!=a)return!1;u=!1}else"s"!=c&&"n"!=c&&(u=!1,l--)}}var p=[],d=p.pop.bind(p);for(i=1;i<r.length;i++){var h=r[i];p.push(1==h?d()|d():2==h?d()&d():h?n(h,t):!d())}return!!d()},o=(e,o,i,l)=>{var u=((e,t)=>{var n=e[t];return Object.keys(n).reduce(((e,t)=>!e||!n[e].loaded&&r(e,t)?t:e),0)})(e,i);return n(l,u)||"undefined"!=typeof console&&console.warn&&console.warn(((e,r,n,o)=>"Unsatisfied version "+n+" from "+(n&&e[r][n].from)+" of shared singleton module "+r+" (required "+t(o)+")")(e,i,u,l)),a(e[i][u])},a=e=>(e.loaded=1,e.get()),l=e=>function(r,t,n,o){var a=i.I(r);return a&&a.then?a.then(e.bind(e,r,i.S[r],t,n,o)):e(r,i.S[r],t,n,o)},u=l(((e,r,t,n,a)=>r&&i.o(r,t)?o(r,0,t,n):a())),s=l(((e,t,o,l,u)=>{var s=t&&i.o(t,o)&&((e,t,o)=>{var a=e[t];return(t=Object.keys(a).reduce(((e,t)=>!n(o,t)||e&&!r(e,t)?e:t),0))&&a[t]})(t,o,l);return s?a(s):u()})),f={},c={2950:()=>u("default","react",[1,17,0,2],(()=>i.e(294).then((()=>()=>i(7294))))),7e3:()=>s("default","chart.js",[1,3,9,1],(()=>i.e(512).then((()=>()=>i(5512))))),2181:()=>u("default","react-dom",[1,17,0,2],(()=>i.e(935).then((()=>()=>i(3935))))),2453:()=>s("default","recoil",[2,0,6,1],(()=>i.e(804).then((()=>()=>i(2804))))),3839:()=>s("default","styled-components",[1,5,3,3],(()=>i.e(458).then((()=>()=>i(5458))))),5475:()=>s("default","react-fivem-hooks",[1,1,0,2,,1],(()=>i.e(387).then((()=>()=>i(4208))))),5662:()=>s("default","react-router-dom",[4,5,3,0],(()=>i.e(48).then((()=>()=>i(6048))))),7675:()=>s("default","react-chartjs-2",[1,4,3,1],(()=>i.e(563).then((()=>()=>i(5376)))))},p={0:[7e3],181:[2181],799:[2453,3839,5475,5662,7675],950:[2950]};i.f.consumes=(e,r)=>{i.o(p,e)&&p[e].forEach((e=>{if(i.o(f,e))return r.push(f[e]);var t=r=>{f[e]=0,i.m[e]=t=>{delete i.c[e],t.exports=r()}},n=r=>{delete f[e],i.m[e]=t=>{throw delete i.c[e],r}};try{var o=c[e]();o.then?r.push(f[e]=o.then(t).catch(n)):t(o)}catch(e){n(e)}}))}})(),(()=>{var e={641:0};i.f.j=(r,t)=>{var n=i.o(e,r)?e[r]:void 0;if(0!==n)if(n)t.push(n[2]);else if(/^(0|181|950)$/.test(r))e[r]=0;else{var o=new Promise(((t,o)=>n=e[r]=[t,o]));t.push(n[2]=o);var a=i.p+i.u(r),l=new Error;i.l(a,(t=>{if(i.o(e,r)&&(0!==(n=e[r])&&(e[r]=void 0),n)){var o=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;l.message="Loading chunk "+r+" failed.\n("+o+": "+a+")",l.name="ChunkLoadError",l.type=o,l.request=a,n[1](l)}}),"chunk-"+r,r)}};var r=(r,t)=>{var n,o,[a,l,u]=t,s=0;if(a.some((r=>0!==e[r]))){for(n in l)i.o(l,n)&&(i.m[n]=l[n]);u&&u(i)}for(r&&r(t);s<a.length;s++)o=a[s],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0},t=self.webpackChunknpwd_crypto=self.webpackChunknpwd_crypto||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})();var l=i(3916);npwd_crypto=l})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,